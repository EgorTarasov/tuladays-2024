// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.26.1
// source: rag_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AddDocumentsRequest is the request message for adding documents.
type AddDocumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of document texts to add.
	Texts []string `protobuf:"bytes,1,rep,name=texts,proto3" json:"texts,omitempty"`
	// List of metadata corresponding to each document.
	Metadata []*structpb.Struct `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *AddDocumentsRequest) Reset() {
	*x = AddDocumentsRequest{}
	mi := &file_rag_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentsRequest) ProtoMessage() {}

func (x *AddDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rag_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentsRequest.ProtoReflect.Descriptor instead.
func (*AddDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_rag_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddDocumentsRequest) GetTexts() []string {
	if x != nil {
		return x.Texts
	}
	return nil
}

func (x *AddDocumentsRequest) GetMetadata() []*structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// AddDocumentsResponse is the response message after adding documents.
type AddDocumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status message indicating success or failure.
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddDocumentsResponse) Reset() {
	*x = AddDocumentsResponse{}
	mi := &file_rag_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentsResponse) ProtoMessage() {}

func (x *AddDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rag_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentsResponse.ProtoReflect.Descriptor instead.
func (*AddDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_rag_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddDocumentsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// StreamQueryRequest is the request message for querying the RAG pipeline.
type StreamQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The query string.
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *StreamQueryRequest) Reset() {
	*x = StreamQueryRequest{}
	mi := &file_rag_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamQueryRequest) ProtoMessage() {}

func (x *StreamQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rag_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamQueryRequest.ProtoReflect.Descriptor instead.
func (*StreamQueryRequest) Descriptor() ([]byte, []int) {
	return file_rag_service_proto_rawDescGZIP(), []int{2}
}

func (x *StreamQueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// StreamQueryResponse is the streamed response message for query results.
type StreamQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The content of the document chunk.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// Metadata associated with the document chunk.
	Metadata *structpb.Struct `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *StreamQueryResponse) Reset() {
	*x = StreamQueryResponse{}
	mi := &file_rag_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamQueryResponse) ProtoMessage() {}

func (x *StreamQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rag_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamQueryResponse.ProtoReflect.Descriptor instead.
func (*StreamQueryResponse) Descriptor() ([]byte, []int) {
	return file_rag_service_proto_rawDescGZIP(), []int{3}
}

func (x *StreamQueryResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *StreamQueryResponse) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_rag_service_proto protoreflect.FileDescriptor

var file_rag_service_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x61, 0x67, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x64, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32, 0x95, 0x01, 0x0a, 0x0a, 0x52,
	0x41, 0x47, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x72, 0x61, 0x67, 0x2e,
	0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x61, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x2e,
	0x72, 0x61, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x61, 0x67, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rag_service_proto_rawDescOnce sync.Once
	file_rag_service_proto_rawDescData = file_rag_service_proto_rawDesc
)

func file_rag_service_proto_rawDescGZIP() []byte {
	file_rag_service_proto_rawDescOnce.Do(func() {
		file_rag_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rag_service_proto_rawDescData)
	})
	return file_rag_service_proto_rawDescData
}

var file_rag_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rag_service_proto_goTypes = []any{
	(*AddDocumentsRequest)(nil),  // 0: rag.AddDocumentsRequest
	(*AddDocumentsResponse)(nil), // 1: rag.AddDocumentsResponse
	(*StreamQueryRequest)(nil),   // 2: rag.StreamQueryRequest
	(*StreamQueryResponse)(nil),  // 3: rag.StreamQueryResponse
	(*structpb.Struct)(nil),      // 4: google.protobuf.Struct
}
var file_rag_service_proto_depIdxs = []int32{
	4, // 0: rag.AddDocumentsRequest.metadata:type_name -> google.protobuf.Struct
	4, // 1: rag.StreamQueryResponse.metadata:type_name -> google.protobuf.Struct
	0, // 2: rag.RAGService.AddDocuments:input_type -> rag.AddDocumentsRequest
	2, // 3: rag.RAGService.StreamQuery:input_type -> rag.StreamQueryRequest
	1, // 4: rag.RAGService.AddDocuments:output_type -> rag.AddDocumentsResponse
	3, // 5: rag.RAGService.StreamQuery:output_type -> rag.StreamQueryResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rag_service_proto_init() }
func file_rag_service_proto_init() {
	if File_rag_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rag_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rag_service_proto_goTypes,
		DependencyIndexes: file_rag_service_proto_depIdxs,
		MessageInfos:      file_rag_service_proto_msgTypes,
	}.Build()
	File_rag_service_proto = out.File
	file_rag_service_proto_rawDesc = nil
	file_rag_service_proto_goTypes = nil
	file_rag_service_proto_depIdxs = nil
}
